#!/bin/bash
set -e

SYSCTL_VAR=kernel.deny_new_usb
DEVICES=

usage() {
	echo "Usage: $(basename "$0") [COMMAND]"
	echo "Control to deny new usb devices."
	echo
	echo "Available commands:"
	echo "  protect       enable protection against new usb devices"
	echo "  unprotect     disable protection against new usb devices"
	echo "  temporary     temporarily disable protection (default 10 sec)"
	echo "  check         exits with 1 if usb is unprotected"
	echo "  status        print current protection status"
	echo "  list          list connected usb devices"
}

deny_new_usb() {
	sudo sysctl -q "${SYSCTL_VAR}=${1}"
	usb_status
}

usb_protected() {
	sysctl -n "${SYSCTL_VAR}"|grep -q 1
}

usb_status() {
	if usb_protected; then
		printf '\e[32;1m'
	else
		printf '\e[31;1mUN'
	fi
	printf 'PROTECTED\e[0m\n'
}

usb_list() {
	lsusb -t
}

temporary() {
	DEVICES=$(usb_list)
	deny_new_usb 0
	trap temporary_end INT TERM
	sleep 10
	temporary_end
}

temporary_end() {
	deny_new_usb 1
	NEW_DEVICES=$(usb_list)
	diff --color <(printf "%s" "${DEVICES}") <(printf "%s" "${NEW_DEVICES}")
	exit
}

case "$1" in
	on|enable|unprotect)
		deny_new_usb 0
		;;
	off|disable|protect)
		deny_new_usb 1
		;;
	temporary|tmp|temp)
		temporary
		;;
    check)
        usb_protected
        ;;
	status)
		usb_status
		;;
	list|ls)
		usb_list
		;;
	*)
		usage
		;;
esac
